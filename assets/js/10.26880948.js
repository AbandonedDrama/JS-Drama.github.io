(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{360:function(a,t,r){a.exports=r.p+"assets/img/image-20210111150131821.7871efc9.png"},386:function(a,t,r){"use strict";r.r(t);var s=r(42),v=Object(s.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"什么是-javascript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-javascript"}},[a._v("#")]),a._v(" 什么是 JavaScript")]),a._v(" "),s("h2",{attrs:{id:"简短的历史回顾"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简短的历史回顾"}},[a._v("#")]),a._v(" 简短的历史回顾")]),a._v(" "),s("p",[a._v("1997 年，JavaScript 1.1 作为提案被提交给欧洲计算机制造商协会(Ecma)。第 39 技术委员会(TC39) 承担了“标准化一门通用、跨平台、厂商中立的脚本语言的语法和语义”的任务(参见 TC39-ECMAScript)。 TC39 委员会由来自网景、Sun、微软、Borland、Nombas 和其他对这门脚本语言有兴趣的公司的工程师 组成。他们花了数月时间打造出 ECMA-262，也就是 ECMAScript(发音为“ek-ma-script”)这个新的脚本语言标准。")]),a._v(" "),s("p",[a._v("1998 年，国际标准化组织(ISO)和国际电工委员会(IEC)也将 ECMAScript 采纳为标准(ISO/ IEC-16262)。自此以后，各家浏览器均以 ECMAScript 作为自己 JavaScript 实现的依据，虽然具体实现 各有不同。")]),a._v(" "),s("h2",{attrs:{id:"javascript-实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-实现"}},[a._v("#")]),a._v(" JavaScript 实现")]),a._v(" "),s("p",[a._v("虽然 JavaScript 和 ECMAScript 基本上是同义词，但 JavaScript 远远不限于 ECMA-262 所定义的那样。 完整的 JavaScript 实现包含以下几个部分:")]),a._v(" "),s("h3",{attrs:{id:"_1、核心-ecmascript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、核心-ecmascript"}},[a._v("#")]),a._v(" 1、核心(ECMAScript)")]),a._v(" "),s("p",[s("code",[a._v("ECMAScript，即 ECMA-262 定义的语言，并不局限于 Web 浏览器。事实上，这门语言没有输入和 输出之类的方法。")])]),a._v(" "),s("h3",{attrs:{id:"_2、文档对象模型-dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、文档对象模型-dom"}},[a._v("#")]),a._v(" 2、文档对象模型(DOM)")]),a._v(" "),s("p",[s("code",[a._v("文档对象模型(DOM，Document Object Model)是一个应用编程接口(API)，用于在 HTML 中使 用扩展的 XML。DOM 将整个页面抽象为一组分层节点。HTML 或 XML 页面的每个组成部分都是一种 节点，包含不同的数据")])]),a._v(" "),s("h3",{attrs:{id:"_3、浏览器对象模型-bom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、浏览器对象模型-bom"}},[a._v("#")]),a._v(" 3、浏览器对象模型(BOM)")]),a._v(" "),s("p",[s("code",[a._v("IE3 和 Netscape Navigator 3 提供了浏览器对象模型(BOM) API，用于支持访问和操作浏览器的窗 口。使用 BOM，开发者可以操控浏览器显示页面之外的部分。而 BOM 真正独一无二的地方，当然也是 问题最多的地方，就是它是唯一一个没有相关标准的 JavaScript 实现。HTML5 改变了这个局面，这个版 本的 HTML 以正式规范的形式涵盖了尽可能多的 BOM 特性。由于 HTML5 的出现，之前很多与 BOM 有关的问题都迎刃而解了。")])]),a._v(" "),s("p",[s("img",{attrs:{src:r(360),alt:"image-20210111150131821"}})]),a._v(" "),s("h2",{attrs:{id:"javascript-版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-版本"}},[a._v("#")]),a._v(" JavaScript 版本")]),a._v(" "),s("p",[a._v("目前已经弃用（Firefox4 发布后）")]),a._v(" "),s("h2",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[a._v("#")]),a._v(" 小结")]),a._v(" "),s("p",[a._v("JavaScript 是一门用来与网页交互的脚本语言，包含以下三个组成部分。")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("ECMAScript:由 ECMA-262 定义并提供核心功能。")])]),a._v(" "),s("li",[s("p",[a._v("文档对象模型(DOM):提供与网页内容交互的方法和接口。")])]),a._v(" "),s("li",[s("p",[a._v("浏览器对象模型(BOM):提供与浏览器交互的方法和接口。")])])]),a._v(" "),s("p",[a._v("JavaScript 的这三个部分得到了五大 Web 浏览器(IE、Firefox、Chrome、Safari 和 Opera)不同程度的支持。所有浏览器基本上对 ES5(ECMAScript 5)提供了完善的支持，而对 ES6(ECMAScript 6)和 ES7(ECMAScript 7)的支持度也在不断提升。这些浏览器对 DOM 的支持各不相同，但对 Level 3 的支 持日益趋于规范。HTML5 中收录的 BOM 会因浏览器而异，不过开发者仍然可以假定存在很大一部分 公共特性。")])])}),[],!1,null,null,null);t.default=v.exports}}]);